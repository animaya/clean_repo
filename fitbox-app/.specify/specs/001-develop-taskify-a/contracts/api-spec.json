{
  "openapi": "3.0.0",
  "info": {
    "title": "Taskify API",
    "version": "1.0.0",
    "description": "Team productivity platform API for Kanban-style task management"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/trpc",
      "description": "Development server"
    }
  ],
  "paths": {
    "/auth.selectUser": {
      "post": {
        "summary": "Select user for session",
        "operationId": "selectUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelectUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User selected successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/auth.getCurrentUser": {
      "get": {
        "summary": "Get current session user",
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "Current user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "No active session"
          }
        }
      }
    },
    "/users.getAll": {
      "get": {
        "summary": "Get all users",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "List of all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects.getAll": {
      "get": {
        "summary": "Get all projects",
        "operationId": "getAllProjects",
        "responses": {
          "200": {
            "description": "List of all projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks.getByProject": {
      "post": {
        "summary": "Get tasks for a project",
        "operationId": "getTasksByProject",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTasksByProjectInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of tasks for the project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskWithComments"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },
    "/tasks.updateStatus": {
      "post": {
        "summary": "Update task status",
        "operationId": "updateTaskStatus",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskStatusInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task status updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/tasks.updatePosition": {
      "post": {
        "summary": "Update task position (for drag and drop)",
        "operationId": "updateTaskPosition",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskPositionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task position updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      }
    },
    "/tasks.assignUser": {
      "post": {
        "summary": "Assign user to task",
        "operationId": "assignUserToTask",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User assigned to task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Task or user not found"
          }
        }
      }
    },
    "/comments.create": {
      "post": {
        "summary": "Create comment on task",
        "operationId": "createComment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentWithUser"
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          },
          "401": {
            "description": "No active session"
          }
        }
      }
    },
    "/comments.update": {
      "post": {
        "summary": "Update comment (own comments only)",
        "operationId": "updateComment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentWithUser"
                }
              }
            }
          },
          "403": {
            "description": "Cannot edit other user's comment"
          },
          "404": {
            "description": "Comment not found"
          }
        }
      }
    },
    "/comments.delete": {
      "post": {
        "summary": "Delete comment (own comments only)",
        "operationId": "deleteComment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCommentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Cannot delete other user's comment"
          },
          "404": {
            "description": "Comment not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["PRODUCT_MANAGER", "ENGINEER"]
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "name", "role", "email"]
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "name"]
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["TODO", "IN_PROGRESS", "IN_REVIEW", "DONE"]
          },
          "position": {
            "type": "integer"
          },
          "projectId": {
            "type": "string"
          },
          "assignedUserId": {
            "type": "string",
            "nullable": true
          },
          "assignedUser": {
            "$ref": "#/components/schemas/User",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "title", "status", "position", "projectId"]
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "content", "taskId", "userId"]
      },
      "CommentWithUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Comment"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              }
            },
            "required": ["user"]
          }
        ]
      },
      "TaskWithComments": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Task"
          },
          {
            "type": "object",
            "properties": {
              "comments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CommentWithUser"
                }
              }
            },
            "required": ["comments"]
          }
        ]
      },
      "SelectUserInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          }
        },
        "required": ["userId"]
      },
      "SessionResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "sessionToken": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["user", "sessionToken", "expiresAt"]
      },
      "GetTasksByProjectInput": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string"
          }
        },
        "required": ["projectId"]
      },
      "UpdateTaskStatusInput": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["TODO", "IN_PROGRESS", "IN_REVIEW", "DONE"]
          }
        },
        "required": ["taskId", "status"]
      },
      "UpdateTaskPositionInput": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "string"
          },
          "newStatus": {
            "type": "string",
            "enum": ["TODO", "IN_PROGRESS", "IN_REVIEW", "DONE"]
          },
          "newPosition": {
            "type": "integer"
          }
        },
        "required": ["taskId", "newStatus", "newPosition"]
      },
      "AssignUserInput": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "required": ["taskId"]
      },
      "CreateCommentInput": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "string"
          },
          "content": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          }
        },
        "required": ["taskId", "content"]
      },
      "UpdateCommentInput": {
        "type": "object",
        "properties": {
          "commentId": {
            "type": "string"
          },
          "content": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          }
        },
        "required": ["commentId", "content"]
      },
      "DeleteCommentInput": {
        "type": "object",
        "properties": {
          "commentId": {
            "type": "string"
          }
        },
        "required": ["commentId"]
      }
    }
  }
}