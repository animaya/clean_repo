generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  PRODUCT_MANAGER
  ENGINEER
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  IN_REVIEW
  DONE
}

model User {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(50)
  role      UserRole
  email     String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  assignedTasks Task[]
  comments      Comment[]
  sessions      Session[]

  @@map("users")
}

model Project {
  id          String   @id @default(cuid())
  name        String   @db.VarChar(100)
  description String?  @db.VarChar(500)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  tasks Task[]

  @@map("projects")
}

model Task {
  id             String     @id @default(cuid())
  title          String     @db.VarChar(200)
  description    String?    @db.VarChar(1000)
  status         TaskStatus @default(TODO)
  position       Int        @default(0)
  projectId      String
  assignedUserId String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  project      Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  assignedUser User?     @relation(fields: [assignedUserId], references: [id], onDelete: SetNull)
  comments     Comment[]

  @@index([projectId, status, position])
  @@map("tasks")
}

model Comment {
  id        String   @id @default(cuid())
  content   String   @db.VarChar(2000)
  taskId    String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([taskId])
  @@map("comments")
}

model Session {
  id        String   @id @default(cuid())
  token     String   @unique @db.VarChar(500)
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([token])
  @@index([expiresAt])
  @@map("sessions")
}